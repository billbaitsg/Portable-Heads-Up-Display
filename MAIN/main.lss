
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000792  00000826  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000792  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800110  00800110  00000836  2**0
                  ALLOC
  3 .debug_aranges 00000060  00000000  00000000  00000836  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000132  00000000  00000000  00000896  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003b5  00000000  00000000  000009c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000023d  00000000  00000000  00000d7d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000034b  00000000  00000000  00000fba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f0  00000000  00000000  00001308  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001b2  00000000  00000000  000013f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000099  00000000  00000000  000015aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00001643  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e9       	ldi	r30, 0x92	; 146
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>

0000008a <__do_clear_bss>:
  8a:	11 e0       	ldi	r17, 0x01	; 1
  8c:	a0 e1       	ldi	r26, 0x10	; 16
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 32       	cpi	r26, 0x20	; 32
  96:	b1 07       	cpc	r27, r17
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 c7 03 	jmp	0x78e	; 0x78e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
**********************************************************/

#include "proj_hdr.h"	/* Include project header file */

int main(void)
{
  a6:	ef 92       	push	r14
  a8:	ff 92       	push	r15
  aa:	0f 93       	push	r16
  ac:	1f 93       	push	r17
  ae:	df 93       	push	r29
  b0:	cf 93       	push	r28
  b2:	cd b7       	in	r28, 0x3d	; 61
  b4:	de b7       	in	r29, 0x3e	; 62
  b6:	2f 97       	sbiw	r28, 0x0f	; 15
  b8:	0f b6       	in	r0, 0x3f	; 63
  ba:	f8 94       	cli
  bc:	de bf       	out	0x3e, r29	; 62
  be:	0f be       	out	0x3f, r0	; 63
  c0:	cd bf       	out	0x3d, r28	; 61
	/* Local Variables */
	unsigned char cmd = 0;
	
	/* Initialize software modules */
	UART_init(9800);
  c2:	88 e4       	ldi	r24, 0x48	; 72
  c4:	96 e2       	ldi	r25, 0x26	; 38
  c6:	0e 94 9c 00 	call	0x138	; 0x138 <UART_init>
	
	sei();	/* Enable global interrupts */
  ca:	78 94       	sei
	
	char hi[] = "Hello World!\n\r";
  cc:	de 01       	movw	r26, r28
  ce:	11 96       	adiw	r26, 0x01	; 1
  d0:	e0 e0       	ldi	r30, 0x00	; 0
  d2:	f1 e0       	ldi	r31, 0x01	; 1
  d4:	8f e0       	ldi	r24, 0x0F	; 15
  d6:	01 90       	ld	r0, Z+
  d8:	0d 92       	st	X+, r0
  da:	81 50       	subi	r24, 0x01	; 1
  dc:	e1 f7       	brne	.-8      	; 0xd6 <main+0x30>
	char *txt = hi;
	
	while(1)
	{
		printf(txt);
  de:	7e 01       	movw	r14, r28
  e0:	08 94       	sec
  e2:	e1 1c       	adc	r14, r1
  e4:	f1 1c       	adc	r15, r1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  e6:	08 ec       	ldi	r16, 0xC8	; 200
  e8:	10 e0       	ldi	r17, 0x00	; 0
  ea:	00 d0       	rcall	.+0      	; 0xec <main+0x46>
  ec:	ed b7       	in	r30, 0x3d	; 61
  ee:	fe b7       	in	r31, 0x3e	; 62
  f0:	f2 82       	std	Z+2, r15	; 0x02
  f2:	e1 82       	std	Z+1, r14	; 0x01
  f4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <printf>
  f8:	80 e1       	ldi	r24, 0x10	; 16
  fa:	97 e2       	ldi	r25, 0x27	; 39
  fc:	0f 90       	pop	r0
  fe:	0f 90       	pop	r0
 100:	f8 01       	movw	r30, r16
 102:	31 97       	sbiw	r30, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <main+0x5c>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 106:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 108:	d9 f7       	brne	.-10     	; 0x100 <main+0x5a>
 10a:	ef cf       	rjmp	.-34     	; 0xea <main+0x44>

0000010c <SPI_MasterInit>:

/* Initialize SPI for master mode */
void SPI_MasterInit(void)
{
	/* Cofigure SSn, MOSI, and SCK as output */
	DDR_SPI = (1<<DD_MOSI)|(1<<DD_SCK)|(1<<DD_SSN);
 10c:	8d e0       	ldi	r24, 0x0D	; 13
 10e:	84 b9       	out	0x04, r24	; 4
	/* Set SPE and MSTR of the SPCR register */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR1);
 110:	82 e5       	ldi	r24, 0x52	; 82
 112:	8c bd       	out	0x2c, r24	; 44
	/* Clear SPI Interrupt Flag by reading SPSR and SPDR */
	char read;
	read = SPSR;
 114:	8d b5       	in	r24, 0x2d	; 45
	read = SPDR;
 116:	8e b5       	in	r24, 0x2e	; 46
}
 118:	08 95       	ret

0000011a <SPI_MasterTransmit>:

/* Transmit a byte of data via the SPI bus in master mode */
void SPI_MasterTransmit(char cData)
{
	/* Start transmission */
	SPDR = cData;
 11a:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
 11c:	0d b4       	in	r0, 0x2d	; 45
 11e:	07 fe       	sbrs	r0, 7
 120:	fd cf       	rjmp	.-6      	; 0x11c <SPI_MasterTransmit+0x2>
}
 122:	08 95       	ret

00000124 <SPI_SlaveInit>:

/* Initialize the SPI for slave mode */
void SPI_SlaveInit(void)
{
	/* Set MISO output, all others input */
	DDR_SPI = (1<<DD_MISO);
 124:	82 e0       	ldi	r24, 0x02	; 2
 126:	84 b9       	out	0x04, r24	; 4
	/* Enable SPI */
	SPCR = (1<<SPIE)|(1<<SPE);
 128:	80 ec       	ldi	r24, 0xC0	; 192
 12a:	8c bd       	out	0x2c, r24	; 44
}
 12c:	08 95       	ret

0000012e <SPI_SlaveReceive>:

/* Recieve a byte of data via the SPI bus in slave mode */
char SPI_SlaveReceive(void)
{
	/* Wait for reception complete */
	while(!(SPSR & (1<<SPIF)))
 12e:	0d b4       	in	r0, 0x2d	; 45
 130:	07 fe       	sbrs	r0, 7
 132:	fd cf       	rjmp	.-6      	; 0x12e <SPI_SlaveReceive>
	;
	/* Return Data Register */
	return SPDR;
 134:	8e b5       	in	r24, 0x2e	; 46
 136:	08 95       	ret

00000138 <UART_init>:

/* Initialize UART module, from datasheet */
void UART_init( unsigned int baud )
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(baud>>8);
 138:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)baud;
 13c:	80 93 c4 00 	sts	0x00C4, r24
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 140:	e1 ec       	ldi	r30, 0xC1	; 193
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	88 e1       	ldi	r24, 0x18	; 24
 146:	80 83       	st	Z, r24
	/* Set frame format: 8 data, 1 stop bit */
	UCSR0C = (0<<USBS0)|(3<<UCSZ00);
 148:	86 e0       	ldi	r24, 0x06	; 6
 14a:	80 93 c2 00 	sts	0x00C2, r24
	/* Enable the USART Recieve Complete interrupt (USART_RXC) */
	UCSR0B |= (1<<RXCIE0);	
 14e:	80 81       	ld	r24, Z
 150:	80 68       	ori	r24, 0x80	; 128
 152:	80 83       	st	Z, r24
}
 154:	08 95       	ret

00000156 <UART_putc>:

/* Send a byte via UART, from datasheet */
void UART_putc( unsigned char data )
{
 156:	98 2f       	mov	r25, r24
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) );
 158:	80 91 c0 00 	lds	r24, 0x00C0
 15c:	85 ff       	sbrs	r24, 5
 15e:	fc cf       	rjmp	.-8      	; 0x158 <UART_putc+0x2>
	/* Put data into buffer, sends the data */
	UDR0 = data;
 160:	90 93 c6 00 	sts	0x00C6, r25
}
 164:	08 95       	ret

00000166 <UART_getc>:

/* Get a byte via UART, from datasheet */
unsigned char UART_getc( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) );
 166:	80 91 c0 00 	lds	r24, 0x00C0
 16a:	87 ff       	sbrs	r24, 7
 16c:	fc cf       	rjmp	.-8      	; 0x166 <UART_getc>
	/* Get and return received data from buffer */
	return UDR0;
 16e:	80 91 c6 00 	lds	r24, 0x00C6
}
 172:	08 95       	ret

00000174 <UART_flush>:

/* Flush out the UART receive buffer, from datasheet */
void UART_flush( void )
{
 174:	02 c0       	rjmp	.+4      	; 0x17a <UART_flush+0x6>
	unsigned char dummy;
	while ( UCSR0A & (1<<RXC0) ) dummy = UDR0;
 176:	80 91 c6 00 	lds	r24, 0x00C6
 17a:	80 91 c0 00 	lds	r24, 0x00C0
 17e:	87 fd       	sbrc	r24, 7
 180:	fa cf       	rjmp	.-12     	; 0x176 <UART_flush+0x2>
}
 182:	08 95       	ret

00000184 <USART_RXC_vect>:

/* UART receive complete interrupt */
ISR( USART_RXC_vect )
{
 184:	1f 92       	push	r1
 186:	0f 92       	push	r0
 188:	0f b6       	in	r0, 0x3f	; 63
 18a:	0f 92       	push	r0
 18c:	11 24       	eor	r1, r1
 18e:	8f 93       	push	r24
 190:	9f 93       	push	r25
 192:	ef 93       	push	r30
 194:	ff 93       	push	r31
	/* Wait for completion of transmit (should be redundant) */
	while ( !(UCSR0A & (1<<RXC0)) );	
 196:	80 91 c0 00 	lds	r24, 0x00C0
 19a:	87 ff       	sbrs	r24, 7
 19c:	fc cf       	rjmp	.-8      	; 0x196 <USART_RXC_vect+0x12>
	/* if BUFFER_SIZE is reached, reset to start of buffer */
	if (UART_BUF_CNT==UART_BUFFER_SIZE) 
 19e:	80 91 10 01 	lds	r24, 0x0110
 1a2:	88 30       	cpi	r24, 0x08	; 8
 1a4:	11 f4       	brne	.+4      	; 0x1aa <USART_RXC_vect+0x26>
	{
		UART_BUF_CNT=0;
 1a6:	10 92 10 01 	sts	0x0110, r1
	}/* End of if */
	/* Put character in buffer and increment counter */
	UART_BUFFER[UART_BUF_CNT++] = UDR0;
 1aa:	80 91 10 01 	lds	r24, 0x0110
 1ae:	e8 2f       	mov	r30, r24
 1b0:	f0 e0       	ldi	r31, 0x00	; 0
 1b2:	90 91 c6 00 	lds	r25, 0x00C6
 1b6:	ee 5e       	subi	r30, 0xEE	; 238
 1b8:	fe 4f       	sbci	r31, 0xFE	; 254
 1ba:	90 83       	st	Z, r25
 1bc:	8f 5f       	subi	r24, 0xFF	; 255
 1be:	80 93 10 01 	sts	0x0110, r24
	/* Put up UART recieve byte complete flag */
	//UART_FLAGS |= (1<<UART_RXC);	
}
 1c2:	ff 91       	pop	r31
 1c4:	ef 91       	pop	r30
 1c6:	9f 91       	pop	r25
 1c8:	8f 91       	pop	r24
 1ca:	0f 90       	pop	r0
 1cc:	0f be       	out	0x3f, r0	; 63
 1ce:	0f 90       	pop	r0
 1d0:	1f 90       	pop	r1
 1d2:	18 95       	reti

000001d4 <USART_TXC_vect>:

/* UART transmit complete interrupt */
ISR( USART_TXC_vect )
{
 1d4:	1f 92       	push	r1
 1d6:	0f 92       	push	r0
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	0f 92       	push	r0
 1dc:	11 24       	eor	r1, r1
	
}
 1de:	0f 90       	pop	r0
 1e0:	0f be       	out	0x3f, r0	; 63
 1e2:	0f 90       	pop	r0
 1e4:	1f 90       	pop	r1
 1e6:	18 95       	reti

000001e8 <USART_DRE_vect>:

/* UART data register empty */
ISR( USART_DRE_vect )
{
 1e8:	1f 92       	push	r1
 1ea:	0f 92       	push	r0
 1ec:	0f b6       	in	r0, 0x3f	; 63
 1ee:	0f 92       	push	r0
 1f0:	11 24       	eor	r1, r1

 1f2:	0f 90       	pop	r0
 1f4:	0f be       	out	0x3f, r0	; 63
 1f6:	0f 90       	pop	r0
 1f8:	1f 90       	pop	r1
 1fa:	18 95       	reti

000001fc <printf>:
 1fc:	a0 e0       	ldi	r26, 0x00	; 0
 1fe:	b0 e0       	ldi	r27, 0x00	; 0
 200:	e4 e0       	ldi	r30, 0x04	; 4
 202:	f1 e0       	ldi	r31, 0x01	; 1
 204:	0c 94 a0 03 	jmp	0x740	; 0x740 <__prologue_saves__+0x20>
 208:	fe 01       	movw	r30, r28
 20a:	35 96       	adiw	r30, 0x05	; 5
 20c:	61 91       	ld	r22, Z+
 20e:	71 91       	ld	r23, Z+
 210:	80 91 1c 01 	lds	r24, 0x011C
 214:	90 91 1d 01 	lds	r25, 0x011D
 218:	af 01       	movw	r20, r30
 21a:	0e 94 13 01 	call	0x226	; 0x226 <vfprintf>
 21e:	20 96       	adiw	r28, 0x00	; 0
 220:	e2 e0       	ldi	r30, 0x02	; 2
 222:	0c 94 bc 03 	jmp	0x778	; 0x778 <__epilogue_restores__+0x20>

00000226 <vfprintf>:
 226:	ab e0       	ldi	r26, 0x0B	; 11
 228:	b0 e0       	ldi	r27, 0x00	; 0
 22a:	e9 e1       	ldi	r30, 0x19	; 25
 22c:	f1 e0       	ldi	r31, 0x01	; 1
 22e:	0c 94 90 03 	jmp	0x720	; 0x720 <__prologue_saves__>
 232:	3c 01       	movw	r6, r24
 234:	2b 01       	movw	r4, r22
 236:	5a 01       	movw	r10, r20
 238:	fc 01       	movw	r30, r24
 23a:	17 82       	std	Z+7, r1	; 0x07
 23c:	16 82       	std	Z+6, r1	; 0x06
 23e:	83 81       	ldd	r24, Z+3	; 0x03
 240:	81 fd       	sbrc	r24, 1
 242:	03 c0       	rjmp	.+6      	; 0x24a <vfprintf+0x24>
 244:	6f ef       	ldi	r22, 0xFF	; 255
 246:	7f ef       	ldi	r23, 0xFF	; 255
 248:	c6 c1       	rjmp	.+908    	; 0x5d6 <__stack+0xd7>
 24a:	9a e0       	ldi	r25, 0x0A	; 10
 24c:	89 2e       	mov	r8, r25
 24e:	1e 01       	movw	r2, r28
 250:	08 94       	sec
 252:	21 1c       	adc	r2, r1
 254:	31 1c       	adc	r3, r1
 256:	f3 01       	movw	r30, r6
 258:	23 81       	ldd	r18, Z+3	; 0x03
 25a:	f2 01       	movw	r30, r4
 25c:	23 fd       	sbrc	r18, 3
 25e:	85 91       	lpm	r24, Z+
 260:	23 ff       	sbrs	r18, 3
 262:	81 91       	ld	r24, Z+
 264:	2f 01       	movw	r4, r30
 266:	88 23       	and	r24, r24
 268:	09 f4       	brne	.+2      	; 0x26c <vfprintf+0x46>
 26a:	b2 c1       	rjmp	.+868    	; 0x5d0 <__stack+0xd1>
 26c:	85 32       	cpi	r24, 0x25	; 37
 26e:	39 f4       	brne	.+14     	; 0x27e <vfprintf+0x58>
 270:	23 fd       	sbrc	r18, 3
 272:	85 91       	lpm	r24, Z+
 274:	23 ff       	sbrs	r18, 3
 276:	81 91       	ld	r24, Z+
 278:	2f 01       	movw	r4, r30
 27a:	85 32       	cpi	r24, 0x25	; 37
 27c:	29 f4       	brne	.+10     	; 0x288 <vfprintf+0x62>
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	b3 01       	movw	r22, r6
 282:	0e 94 06 03 	call	0x60c	; 0x60c <fputc>
 286:	e7 cf       	rjmp	.-50     	; 0x256 <vfprintf+0x30>
 288:	98 2f       	mov	r25, r24
 28a:	ff 24       	eor	r15, r15
 28c:	ee 24       	eor	r14, r14
 28e:	99 24       	eor	r9, r9
 290:	ff e1       	ldi	r31, 0x1F	; 31
 292:	ff 15       	cp	r31, r15
 294:	d0 f0       	brcs	.+52     	; 0x2ca <vfprintf+0xa4>
 296:	9b 32       	cpi	r25, 0x2B	; 43
 298:	69 f0       	breq	.+26     	; 0x2b4 <vfprintf+0x8e>
 29a:	9c 32       	cpi	r25, 0x2C	; 44
 29c:	28 f4       	brcc	.+10     	; 0x2a8 <vfprintf+0x82>
 29e:	90 32       	cpi	r25, 0x20	; 32
 2a0:	59 f0       	breq	.+22     	; 0x2b8 <vfprintf+0x92>
 2a2:	93 32       	cpi	r25, 0x23	; 35
 2a4:	91 f4       	brne	.+36     	; 0x2ca <vfprintf+0xa4>
 2a6:	0e c0       	rjmp	.+28     	; 0x2c4 <vfprintf+0x9e>
 2a8:	9d 32       	cpi	r25, 0x2D	; 45
 2aa:	49 f0       	breq	.+18     	; 0x2be <vfprintf+0x98>
 2ac:	90 33       	cpi	r25, 0x30	; 48
 2ae:	69 f4       	brne	.+26     	; 0x2ca <vfprintf+0xa4>
 2b0:	41 e0       	ldi	r20, 0x01	; 1
 2b2:	24 c0       	rjmp	.+72     	; 0x2fc <vfprintf+0xd6>
 2b4:	52 e0       	ldi	r21, 0x02	; 2
 2b6:	f5 2a       	or	r15, r21
 2b8:	84 e0       	ldi	r24, 0x04	; 4
 2ba:	f8 2a       	or	r15, r24
 2bc:	28 c0       	rjmp	.+80     	; 0x30e <vfprintf+0xe8>
 2be:	98 e0       	ldi	r25, 0x08	; 8
 2c0:	f9 2a       	or	r15, r25
 2c2:	25 c0       	rjmp	.+74     	; 0x30e <vfprintf+0xe8>
 2c4:	e0 e1       	ldi	r30, 0x10	; 16
 2c6:	fe 2a       	or	r15, r30
 2c8:	22 c0       	rjmp	.+68     	; 0x30e <vfprintf+0xe8>
 2ca:	f7 fc       	sbrc	r15, 7
 2cc:	29 c0       	rjmp	.+82     	; 0x320 <vfprintf+0xfa>
 2ce:	89 2f       	mov	r24, r25
 2d0:	80 53       	subi	r24, 0x30	; 48
 2d2:	8a 30       	cpi	r24, 0x0A	; 10
 2d4:	70 f4       	brcc	.+28     	; 0x2f2 <vfprintf+0xcc>
 2d6:	f6 fe       	sbrs	r15, 6
 2d8:	05 c0       	rjmp	.+10     	; 0x2e4 <vfprintf+0xbe>
 2da:	98 9c       	mul	r9, r8
 2dc:	90 2c       	mov	r9, r0
 2de:	11 24       	eor	r1, r1
 2e0:	98 0e       	add	r9, r24
 2e2:	15 c0       	rjmp	.+42     	; 0x30e <vfprintf+0xe8>
 2e4:	e8 9c       	mul	r14, r8
 2e6:	e0 2c       	mov	r14, r0
 2e8:	11 24       	eor	r1, r1
 2ea:	e8 0e       	add	r14, r24
 2ec:	f0 e2       	ldi	r31, 0x20	; 32
 2ee:	ff 2a       	or	r15, r31
 2f0:	0e c0       	rjmp	.+28     	; 0x30e <vfprintf+0xe8>
 2f2:	9e 32       	cpi	r25, 0x2E	; 46
 2f4:	29 f4       	brne	.+10     	; 0x300 <vfprintf+0xda>
 2f6:	f6 fc       	sbrc	r15, 6
 2f8:	6b c1       	rjmp	.+726    	; 0x5d0 <__stack+0xd1>
 2fa:	40 e4       	ldi	r20, 0x40	; 64
 2fc:	f4 2a       	or	r15, r20
 2fe:	07 c0       	rjmp	.+14     	; 0x30e <vfprintf+0xe8>
 300:	9c 36       	cpi	r25, 0x6C	; 108
 302:	19 f4       	brne	.+6      	; 0x30a <vfprintf+0xe4>
 304:	50 e8       	ldi	r21, 0x80	; 128
 306:	f5 2a       	or	r15, r21
 308:	02 c0       	rjmp	.+4      	; 0x30e <vfprintf+0xe8>
 30a:	98 36       	cpi	r25, 0x68	; 104
 30c:	49 f4       	brne	.+18     	; 0x320 <vfprintf+0xfa>
 30e:	f2 01       	movw	r30, r4
 310:	23 fd       	sbrc	r18, 3
 312:	95 91       	lpm	r25, Z+
 314:	23 ff       	sbrs	r18, 3
 316:	91 91       	ld	r25, Z+
 318:	2f 01       	movw	r4, r30
 31a:	99 23       	and	r25, r25
 31c:	09 f0       	breq	.+2      	; 0x320 <vfprintf+0xfa>
 31e:	b8 cf       	rjmp	.-144    	; 0x290 <vfprintf+0x6a>
 320:	89 2f       	mov	r24, r25
 322:	85 54       	subi	r24, 0x45	; 69
 324:	83 30       	cpi	r24, 0x03	; 3
 326:	18 f0       	brcs	.+6      	; 0x32e <vfprintf+0x108>
 328:	80 52       	subi	r24, 0x20	; 32
 32a:	83 30       	cpi	r24, 0x03	; 3
 32c:	38 f4       	brcc	.+14     	; 0x33c <vfprintf+0x116>
 32e:	44 e0       	ldi	r20, 0x04	; 4
 330:	50 e0       	ldi	r21, 0x00	; 0
 332:	a4 0e       	add	r10, r20
 334:	b5 1e       	adc	r11, r21
 336:	5f e3       	ldi	r21, 0x3F	; 63
 338:	59 83       	std	Y+1, r21	; 0x01
 33a:	0f c0       	rjmp	.+30     	; 0x35a <vfprintf+0x134>
 33c:	93 36       	cpi	r25, 0x63	; 99
 33e:	31 f0       	breq	.+12     	; 0x34c <vfprintf+0x126>
 340:	93 37       	cpi	r25, 0x73	; 115
 342:	79 f0       	breq	.+30     	; 0x362 <vfprintf+0x13c>
 344:	93 35       	cpi	r25, 0x53	; 83
 346:	09 f0       	breq	.+2      	; 0x34a <vfprintf+0x124>
 348:	56 c0       	rjmp	.+172    	; 0x3f6 <vfprintf+0x1d0>
 34a:	20 c0       	rjmp	.+64     	; 0x38c <vfprintf+0x166>
 34c:	f5 01       	movw	r30, r10
 34e:	80 81       	ld	r24, Z
 350:	89 83       	std	Y+1, r24	; 0x01
 352:	42 e0       	ldi	r20, 0x02	; 2
 354:	50 e0       	ldi	r21, 0x00	; 0
 356:	a4 0e       	add	r10, r20
 358:	b5 1e       	adc	r11, r21
 35a:	61 01       	movw	r12, r2
 35c:	01 e0       	ldi	r16, 0x01	; 1
 35e:	10 e0       	ldi	r17, 0x00	; 0
 360:	12 c0       	rjmp	.+36     	; 0x386 <vfprintf+0x160>
 362:	f5 01       	movw	r30, r10
 364:	c0 80       	ld	r12, Z
 366:	d1 80       	ldd	r13, Z+1	; 0x01
 368:	f6 fc       	sbrc	r15, 6
 36a:	03 c0       	rjmp	.+6      	; 0x372 <vfprintf+0x14c>
 36c:	6f ef       	ldi	r22, 0xFF	; 255
 36e:	7f ef       	ldi	r23, 0xFF	; 255
 370:	02 c0       	rjmp	.+4      	; 0x376 <vfprintf+0x150>
 372:	69 2d       	mov	r22, r9
 374:	70 e0       	ldi	r23, 0x00	; 0
 376:	42 e0       	ldi	r20, 0x02	; 2
 378:	50 e0       	ldi	r21, 0x00	; 0
 37a:	a4 0e       	add	r10, r20
 37c:	b5 1e       	adc	r11, r21
 37e:	c6 01       	movw	r24, r12
 380:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <strnlen>
 384:	8c 01       	movw	r16, r24
 386:	5f e7       	ldi	r21, 0x7F	; 127
 388:	f5 22       	and	r15, r21
 38a:	14 c0       	rjmp	.+40     	; 0x3b4 <vfprintf+0x18e>
 38c:	f5 01       	movw	r30, r10
 38e:	c0 80       	ld	r12, Z
 390:	d1 80       	ldd	r13, Z+1	; 0x01
 392:	f6 fc       	sbrc	r15, 6
 394:	03 c0       	rjmp	.+6      	; 0x39c <vfprintf+0x176>
 396:	6f ef       	ldi	r22, 0xFF	; 255
 398:	7f ef       	ldi	r23, 0xFF	; 255
 39a:	02 c0       	rjmp	.+4      	; 0x3a0 <vfprintf+0x17a>
 39c:	69 2d       	mov	r22, r9
 39e:	70 e0       	ldi	r23, 0x00	; 0
 3a0:	42 e0       	ldi	r20, 0x02	; 2
 3a2:	50 e0       	ldi	r21, 0x00	; 0
 3a4:	a4 0e       	add	r10, r20
 3a6:	b5 1e       	adc	r11, r21
 3a8:	c6 01       	movw	r24, r12
 3aa:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <strnlen_P>
 3ae:	8c 01       	movw	r16, r24
 3b0:	50 e8       	ldi	r21, 0x80	; 128
 3b2:	f5 2a       	or	r15, r21
 3b4:	f3 fe       	sbrs	r15, 3
 3b6:	07 c0       	rjmp	.+14     	; 0x3c6 <vfprintf+0x1a0>
 3b8:	1a c0       	rjmp	.+52     	; 0x3ee <vfprintf+0x1c8>
 3ba:	80 e2       	ldi	r24, 0x20	; 32
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	b3 01       	movw	r22, r6
 3c0:	0e 94 06 03 	call	0x60c	; 0x60c <fputc>
 3c4:	ea 94       	dec	r14
 3c6:	8e 2d       	mov	r24, r14
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	08 17       	cp	r16, r24
 3cc:	19 07       	cpc	r17, r25
 3ce:	a8 f3       	brcs	.-22     	; 0x3ba <vfprintf+0x194>
 3d0:	0e c0       	rjmp	.+28     	; 0x3ee <vfprintf+0x1c8>
 3d2:	f6 01       	movw	r30, r12
 3d4:	f7 fc       	sbrc	r15, 7
 3d6:	85 91       	lpm	r24, Z+
 3d8:	f7 fe       	sbrs	r15, 7
 3da:	81 91       	ld	r24, Z+
 3dc:	6f 01       	movw	r12, r30
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	b3 01       	movw	r22, r6
 3e2:	0e 94 06 03 	call	0x60c	; 0x60c <fputc>
 3e6:	e1 10       	cpse	r14, r1
 3e8:	ea 94       	dec	r14
 3ea:	01 50       	subi	r16, 0x01	; 1
 3ec:	10 40       	sbci	r17, 0x00	; 0
 3ee:	01 15       	cp	r16, r1
 3f0:	11 05       	cpc	r17, r1
 3f2:	79 f7       	brne	.-34     	; 0x3d2 <vfprintf+0x1ac>
 3f4:	ea c0       	rjmp	.+468    	; 0x5ca <__stack+0xcb>
 3f6:	94 36       	cpi	r25, 0x64	; 100
 3f8:	11 f0       	breq	.+4      	; 0x3fe <vfprintf+0x1d8>
 3fa:	99 36       	cpi	r25, 0x69	; 105
 3fc:	69 f5       	brne	.+90     	; 0x458 <vfprintf+0x232>
 3fe:	f7 fe       	sbrs	r15, 7
 400:	08 c0       	rjmp	.+16     	; 0x412 <vfprintf+0x1ec>
 402:	f5 01       	movw	r30, r10
 404:	20 81       	ld	r18, Z
 406:	31 81       	ldd	r19, Z+1	; 0x01
 408:	42 81       	ldd	r20, Z+2	; 0x02
 40a:	53 81       	ldd	r21, Z+3	; 0x03
 40c:	84 e0       	ldi	r24, 0x04	; 4
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	0a c0       	rjmp	.+20     	; 0x426 <vfprintf+0x200>
 412:	f5 01       	movw	r30, r10
 414:	80 81       	ld	r24, Z
 416:	91 81       	ldd	r25, Z+1	; 0x01
 418:	9c 01       	movw	r18, r24
 41a:	44 27       	eor	r20, r20
 41c:	37 fd       	sbrc	r19, 7
 41e:	40 95       	com	r20
 420:	54 2f       	mov	r21, r20
 422:	82 e0       	ldi	r24, 0x02	; 2
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	a8 0e       	add	r10, r24
 428:	b9 1e       	adc	r11, r25
 42a:	9f e6       	ldi	r25, 0x6F	; 111
 42c:	f9 22       	and	r15, r25
 42e:	57 ff       	sbrs	r21, 7
 430:	09 c0       	rjmp	.+18     	; 0x444 <vfprintf+0x21e>
 432:	50 95       	com	r21
 434:	40 95       	com	r20
 436:	30 95       	com	r19
 438:	21 95       	neg	r18
 43a:	3f 4f       	sbci	r19, 0xFF	; 255
 43c:	4f 4f       	sbci	r20, 0xFF	; 255
 43e:	5f 4f       	sbci	r21, 0xFF	; 255
 440:	e0 e8       	ldi	r30, 0x80	; 128
 442:	fe 2a       	or	r15, r30
 444:	ca 01       	movw	r24, r20
 446:	b9 01       	movw	r22, r18
 448:	a1 01       	movw	r20, r2
 44a:	2a e0       	ldi	r18, 0x0A	; 10
 44c:	30 e0       	ldi	r19, 0x00	; 0
 44e:	0e 94 32 03 	call	0x664	; 0x664 <__ultoa_invert>
 452:	d8 2e       	mov	r13, r24
 454:	d2 18       	sub	r13, r2
 456:	40 c0       	rjmp	.+128    	; 0x4d8 <vfprintf+0x2b2>
 458:	95 37       	cpi	r25, 0x75	; 117
 45a:	29 f4       	brne	.+10     	; 0x466 <vfprintf+0x240>
 45c:	1f 2d       	mov	r17, r15
 45e:	1f 7e       	andi	r17, 0xEF	; 239
 460:	2a e0       	ldi	r18, 0x0A	; 10
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	1d c0       	rjmp	.+58     	; 0x4a0 <vfprintf+0x27a>
 466:	1f 2d       	mov	r17, r15
 468:	19 7f       	andi	r17, 0xF9	; 249
 46a:	9f 36       	cpi	r25, 0x6F	; 111
 46c:	61 f0       	breq	.+24     	; 0x486 <vfprintf+0x260>
 46e:	90 37       	cpi	r25, 0x70	; 112
 470:	20 f4       	brcc	.+8      	; 0x47a <vfprintf+0x254>
 472:	98 35       	cpi	r25, 0x58	; 88
 474:	09 f0       	breq	.+2      	; 0x478 <vfprintf+0x252>
 476:	ac c0       	rjmp	.+344    	; 0x5d0 <__stack+0xd1>
 478:	0f c0       	rjmp	.+30     	; 0x498 <vfprintf+0x272>
 47a:	90 37       	cpi	r25, 0x70	; 112
 47c:	39 f0       	breq	.+14     	; 0x48c <vfprintf+0x266>
 47e:	98 37       	cpi	r25, 0x78	; 120
 480:	09 f0       	breq	.+2      	; 0x484 <vfprintf+0x25e>
 482:	a6 c0       	rjmp	.+332    	; 0x5d0 <__stack+0xd1>
 484:	04 c0       	rjmp	.+8      	; 0x48e <vfprintf+0x268>
 486:	28 e0       	ldi	r18, 0x08	; 8
 488:	30 e0       	ldi	r19, 0x00	; 0
 48a:	0a c0       	rjmp	.+20     	; 0x4a0 <vfprintf+0x27a>
 48c:	10 61       	ori	r17, 0x10	; 16
 48e:	14 fd       	sbrc	r17, 4
 490:	14 60       	ori	r17, 0x04	; 4
 492:	20 e1       	ldi	r18, 0x10	; 16
 494:	30 e0       	ldi	r19, 0x00	; 0
 496:	04 c0       	rjmp	.+8      	; 0x4a0 <vfprintf+0x27a>
 498:	14 fd       	sbrc	r17, 4
 49a:	16 60       	ori	r17, 0x06	; 6
 49c:	20 e1       	ldi	r18, 0x10	; 16
 49e:	32 e0       	ldi	r19, 0x02	; 2
 4a0:	17 ff       	sbrs	r17, 7
 4a2:	08 c0       	rjmp	.+16     	; 0x4b4 <vfprintf+0x28e>
 4a4:	f5 01       	movw	r30, r10
 4a6:	60 81       	ld	r22, Z
 4a8:	71 81       	ldd	r23, Z+1	; 0x01
 4aa:	82 81       	ldd	r24, Z+2	; 0x02
 4ac:	93 81       	ldd	r25, Z+3	; 0x03
 4ae:	44 e0       	ldi	r20, 0x04	; 4
 4b0:	50 e0       	ldi	r21, 0x00	; 0
 4b2:	08 c0       	rjmp	.+16     	; 0x4c4 <vfprintf+0x29e>
 4b4:	f5 01       	movw	r30, r10
 4b6:	80 81       	ld	r24, Z
 4b8:	91 81       	ldd	r25, Z+1	; 0x01
 4ba:	bc 01       	movw	r22, r24
 4bc:	80 e0       	ldi	r24, 0x00	; 0
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	42 e0       	ldi	r20, 0x02	; 2
 4c2:	50 e0       	ldi	r21, 0x00	; 0
 4c4:	a4 0e       	add	r10, r20
 4c6:	b5 1e       	adc	r11, r21
 4c8:	a1 01       	movw	r20, r2
 4ca:	0e 94 32 03 	call	0x664	; 0x664 <__ultoa_invert>
 4ce:	d8 2e       	mov	r13, r24
 4d0:	d2 18       	sub	r13, r2
 4d2:	8f e7       	ldi	r24, 0x7F	; 127
 4d4:	f8 2e       	mov	r15, r24
 4d6:	f1 22       	and	r15, r17
 4d8:	f6 fe       	sbrs	r15, 6
 4da:	0b c0       	rjmp	.+22     	; 0x4f2 <vfprintf+0x2cc>
 4dc:	5e ef       	ldi	r21, 0xFE	; 254
 4de:	f5 22       	and	r15, r21
 4e0:	d9 14       	cp	r13, r9
 4e2:	38 f4       	brcc	.+14     	; 0x4f2 <vfprintf+0x2cc>
 4e4:	f4 fe       	sbrs	r15, 4
 4e6:	07 c0       	rjmp	.+14     	; 0x4f6 <vfprintf+0x2d0>
 4e8:	f2 fc       	sbrc	r15, 2
 4ea:	05 c0       	rjmp	.+10     	; 0x4f6 <vfprintf+0x2d0>
 4ec:	8f ee       	ldi	r24, 0xEF	; 239
 4ee:	f8 22       	and	r15, r24
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <vfprintf+0x2d0>
 4f2:	1d 2d       	mov	r17, r13
 4f4:	01 c0       	rjmp	.+2      	; 0x4f8 <vfprintf+0x2d2>
 4f6:	19 2d       	mov	r17, r9
 4f8:	f4 fe       	sbrs	r15, 4
 4fa:	0d c0       	rjmp	.+26     	; 0x516 <__stack+0x17>
 4fc:	fe 01       	movw	r30, r28
 4fe:	ed 0d       	add	r30, r13
 500:	f1 1d       	adc	r31, r1
 502:	80 81       	ld	r24, Z
 504:	80 33       	cpi	r24, 0x30	; 48
 506:	19 f4       	brne	.+6      	; 0x50e <__stack+0xf>
 508:	99 ee       	ldi	r25, 0xE9	; 233
 50a:	f9 22       	and	r15, r25
 50c:	08 c0       	rjmp	.+16     	; 0x51e <__stack+0x1f>
 50e:	1f 5f       	subi	r17, 0xFF	; 255
 510:	f2 fe       	sbrs	r15, 2
 512:	05 c0       	rjmp	.+10     	; 0x51e <__stack+0x1f>
 514:	03 c0       	rjmp	.+6      	; 0x51c <__stack+0x1d>
 516:	8f 2d       	mov	r24, r15
 518:	86 78       	andi	r24, 0x86	; 134
 51a:	09 f0       	breq	.+2      	; 0x51e <__stack+0x1f>
 51c:	1f 5f       	subi	r17, 0xFF	; 255
 51e:	0f 2d       	mov	r16, r15
 520:	f3 fc       	sbrc	r15, 3
 522:	14 c0       	rjmp	.+40     	; 0x54c <__stack+0x4d>
 524:	f0 fe       	sbrs	r15, 0
 526:	0f c0       	rjmp	.+30     	; 0x546 <__stack+0x47>
 528:	1e 15       	cp	r17, r14
 52a:	10 f0       	brcs	.+4      	; 0x530 <__stack+0x31>
 52c:	9d 2c       	mov	r9, r13
 52e:	0b c0       	rjmp	.+22     	; 0x546 <__stack+0x47>
 530:	9d 2c       	mov	r9, r13
 532:	9e 0c       	add	r9, r14
 534:	91 1a       	sub	r9, r17
 536:	1e 2d       	mov	r17, r14
 538:	06 c0       	rjmp	.+12     	; 0x546 <__stack+0x47>
 53a:	80 e2       	ldi	r24, 0x20	; 32
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	b3 01       	movw	r22, r6
 540:	0e 94 06 03 	call	0x60c	; 0x60c <fputc>
 544:	1f 5f       	subi	r17, 0xFF	; 255
 546:	1e 15       	cp	r17, r14
 548:	c0 f3       	brcs	.-16     	; 0x53a <__stack+0x3b>
 54a:	04 c0       	rjmp	.+8      	; 0x554 <__stack+0x55>
 54c:	1e 15       	cp	r17, r14
 54e:	10 f4       	brcc	.+4      	; 0x554 <__stack+0x55>
 550:	e1 1a       	sub	r14, r17
 552:	01 c0       	rjmp	.+2      	; 0x556 <__stack+0x57>
 554:	ee 24       	eor	r14, r14
 556:	04 ff       	sbrs	r16, 4
 558:	0f c0       	rjmp	.+30     	; 0x578 <__stack+0x79>
 55a:	80 e3       	ldi	r24, 0x30	; 48
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	b3 01       	movw	r22, r6
 560:	0e 94 06 03 	call	0x60c	; 0x60c <fputc>
 564:	02 ff       	sbrs	r16, 2
 566:	1d c0       	rjmp	.+58     	; 0x5a2 <__stack+0xa3>
 568:	01 fd       	sbrc	r16, 1
 56a:	03 c0       	rjmp	.+6      	; 0x572 <__stack+0x73>
 56c:	88 e7       	ldi	r24, 0x78	; 120
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	0e c0       	rjmp	.+28     	; 0x58e <__stack+0x8f>
 572:	88 e5       	ldi	r24, 0x58	; 88
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	0b c0       	rjmp	.+22     	; 0x58e <__stack+0x8f>
 578:	80 2f       	mov	r24, r16
 57a:	86 78       	andi	r24, 0x86	; 134
 57c:	91 f0       	breq	.+36     	; 0x5a2 <__stack+0xa3>
 57e:	01 ff       	sbrs	r16, 1
 580:	02 c0       	rjmp	.+4      	; 0x586 <__stack+0x87>
 582:	8b e2       	ldi	r24, 0x2B	; 43
 584:	01 c0       	rjmp	.+2      	; 0x588 <__stack+0x89>
 586:	80 e2       	ldi	r24, 0x20	; 32
 588:	f7 fc       	sbrc	r15, 7
 58a:	8d e2       	ldi	r24, 0x2D	; 45
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	b3 01       	movw	r22, r6
 590:	0e 94 06 03 	call	0x60c	; 0x60c <fputc>
 594:	06 c0       	rjmp	.+12     	; 0x5a2 <__stack+0xa3>
 596:	80 e3       	ldi	r24, 0x30	; 48
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	b3 01       	movw	r22, r6
 59c:	0e 94 06 03 	call	0x60c	; 0x60c <fputc>
 5a0:	9a 94       	dec	r9
 5a2:	d9 14       	cp	r13, r9
 5a4:	c0 f3       	brcs	.-16     	; 0x596 <__stack+0x97>
 5a6:	da 94       	dec	r13
 5a8:	f1 01       	movw	r30, r2
 5aa:	ed 0d       	add	r30, r13
 5ac:	f1 1d       	adc	r31, r1
 5ae:	80 81       	ld	r24, Z
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	b3 01       	movw	r22, r6
 5b4:	0e 94 06 03 	call	0x60c	; 0x60c <fputc>
 5b8:	dd 20       	and	r13, r13
 5ba:	a9 f7       	brne	.-22     	; 0x5a6 <__stack+0xa7>
 5bc:	06 c0       	rjmp	.+12     	; 0x5ca <__stack+0xcb>
 5be:	80 e2       	ldi	r24, 0x20	; 32
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	b3 01       	movw	r22, r6
 5c4:	0e 94 06 03 	call	0x60c	; 0x60c <fputc>
 5c8:	ea 94       	dec	r14
 5ca:	ee 20       	and	r14, r14
 5cc:	c1 f7       	brne	.-16     	; 0x5be <__stack+0xbf>
 5ce:	43 ce       	rjmp	.-890    	; 0x256 <vfprintf+0x30>
 5d0:	f3 01       	movw	r30, r6
 5d2:	66 81       	ldd	r22, Z+6	; 0x06
 5d4:	77 81       	ldd	r23, Z+7	; 0x07
 5d6:	cb 01       	movw	r24, r22
 5d8:	2b 96       	adiw	r28, 0x0b	; 11
 5da:	e2 e1       	ldi	r30, 0x12	; 18
 5dc:	0c 94 ac 03 	jmp	0x758	; 0x758 <__epilogue_restores__>

000005e0 <strnlen_P>:
 5e0:	fc 01       	movw	r30, r24
 5e2:	05 90       	lpm	r0, Z+
 5e4:	61 50       	subi	r22, 0x01	; 1
 5e6:	70 40       	sbci	r23, 0x00	; 0
 5e8:	01 10       	cpse	r0, r1
 5ea:	d8 f7       	brcc	.-10     	; 0x5e2 <strnlen_P+0x2>
 5ec:	80 95       	com	r24
 5ee:	90 95       	com	r25
 5f0:	8e 0f       	add	r24, r30
 5f2:	9f 1f       	adc	r25, r31
 5f4:	08 95       	ret

000005f6 <strnlen>:
 5f6:	fc 01       	movw	r30, r24
 5f8:	61 50       	subi	r22, 0x01	; 1
 5fa:	70 40       	sbci	r23, 0x00	; 0
 5fc:	01 90       	ld	r0, Z+
 5fe:	01 10       	cpse	r0, r1
 600:	d8 f7       	brcc	.-10     	; 0x5f8 <strnlen+0x2>
 602:	80 95       	com	r24
 604:	90 95       	com	r25
 606:	8e 0f       	add	r24, r30
 608:	9f 1f       	adc	r25, r31
 60a:	08 95       	ret

0000060c <fputc>:
 60c:	0f 93       	push	r16
 60e:	1f 93       	push	r17
 610:	cf 93       	push	r28
 612:	df 93       	push	r29
 614:	8c 01       	movw	r16, r24
 616:	eb 01       	movw	r28, r22
 618:	8b 81       	ldd	r24, Y+3	; 0x03
 61a:	81 ff       	sbrs	r24, 1
 61c:	1b c0       	rjmp	.+54     	; 0x654 <fputc+0x48>
 61e:	82 ff       	sbrs	r24, 2
 620:	0d c0       	rjmp	.+26     	; 0x63c <fputc+0x30>
 622:	2e 81       	ldd	r18, Y+6	; 0x06
 624:	3f 81       	ldd	r19, Y+7	; 0x07
 626:	8c 81       	ldd	r24, Y+4	; 0x04
 628:	9d 81       	ldd	r25, Y+5	; 0x05
 62a:	28 17       	cp	r18, r24
 62c:	39 07       	cpc	r19, r25
 62e:	64 f4       	brge	.+24     	; 0x648 <fputc+0x3c>
 630:	e8 81       	ld	r30, Y
 632:	f9 81       	ldd	r31, Y+1	; 0x01
 634:	01 93       	st	Z+, r16
 636:	f9 83       	std	Y+1, r31	; 0x01
 638:	e8 83       	st	Y, r30
 63a:	06 c0       	rjmp	.+12     	; 0x648 <fputc+0x3c>
 63c:	e8 85       	ldd	r30, Y+8	; 0x08
 63e:	f9 85       	ldd	r31, Y+9	; 0x09
 640:	80 2f       	mov	r24, r16
 642:	09 95       	icall
 644:	89 2b       	or	r24, r25
 646:	31 f4       	brne	.+12     	; 0x654 <fputc+0x48>
 648:	8e 81       	ldd	r24, Y+6	; 0x06
 64a:	9f 81       	ldd	r25, Y+7	; 0x07
 64c:	01 96       	adiw	r24, 0x01	; 1
 64e:	9f 83       	std	Y+7, r25	; 0x07
 650:	8e 83       	std	Y+6, r24	; 0x06
 652:	02 c0       	rjmp	.+4      	; 0x658 <fputc+0x4c>
 654:	0f ef       	ldi	r16, 0xFF	; 255
 656:	1f ef       	ldi	r17, 0xFF	; 255
 658:	c8 01       	movw	r24, r16
 65a:	df 91       	pop	r29
 65c:	cf 91       	pop	r28
 65e:	1f 91       	pop	r17
 660:	0f 91       	pop	r16
 662:	08 95       	ret

00000664 <__ultoa_invert>:
 664:	fa 01       	movw	r30, r20
 666:	aa 27       	eor	r26, r26
 668:	28 30       	cpi	r18, 0x08	; 8
 66a:	51 f1       	breq	.+84     	; 0x6c0 <__ultoa_invert+0x5c>
 66c:	20 31       	cpi	r18, 0x10	; 16
 66e:	81 f1       	breq	.+96     	; 0x6d0 <__ultoa_invert+0x6c>
 670:	e8 94       	clt
 672:	6f 93       	push	r22
 674:	6e 7f       	andi	r22, 0xFE	; 254
 676:	6e 5f       	subi	r22, 0xFE	; 254
 678:	7f 4f       	sbci	r23, 0xFF	; 255
 67a:	8f 4f       	sbci	r24, 0xFF	; 255
 67c:	9f 4f       	sbci	r25, 0xFF	; 255
 67e:	af 4f       	sbci	r26, 0xFF	; 255
 680:	b1 e0       	ldi	r27, 0x01	; 1
 682:	3e d0       	rcall	.+124    	; 0x700 <__ultoa_invert+0x9c>
 684:	b4 e0       	ldi	r27, 0x04	; 4
 686:	3c d0       	rcall	.+120    	; 0x700 <__ultoa_invert+0x9c>
 688:	67 0f       	add	r22, r23
 68a:	78 1f       	adc	r23, r24
 68c:	89 1f       	adc	r24, r25
 68e:	9a 1f       	adc	r25, r26
 690:	a1 1d       	adc	r26, r1
 692:	68 0f       	add	r22, r24
 694:	79 1f       	adc	r23, r25
 696:	8a 1f       	adc	r24, r26
 698:	91 1d       	adc	r25, r1
 69a:	a1 1d       	adc	r26, r1
 69c:	6a 0f       	add	r22, r26
 69e:	71 1d       	adc	r23, r1
 6a0:	81 1d       	adc	r24, r1
 6a2:	91 1d       	adc	r25, r1
 6a4:	a1 1d       	adc	r26, r1
 6a6:	20 d0       	rcall	.+64     	; 0x6e8 <__ultoa_invert+0x84>
 6a8:	09 f4       	brne	.+2      	; 0x6ac <__ultoa_invert+0x48>
 6aa:	68 94       	set
 6ac:	3f 91       	pop	r19
 6ae:	2a e0       	ldi	r18, 0x0A	; 10
 6b0:	26 9f       	mul	r18, r22
 6b2:	11 24       	eor	r1, r1
 6b4:	30 19       	sub	r19, r0
 6b6:	30 5d       	subi	r19, 0xD0	; 208
 6b8:	31 93       	st	Z+, r19
 6ba:	de f6       	brtc	.-74     	; 0x672 <__ultoa_invert+0xe>
 6bc:	cf 01       	movw	r24, r30
 6be:	08 95       	ret
 6c0:	46 2f       	mov	r20, r22
 6c2:	47 70       	andi	r20, 0x07	; 7
 6c4:	40 5d       	subi	r20, 0xD0	; 208
 6c6:	41 93       	st	Z+, r20
 6c8:	b3 e0       	ldi	r27, 0x03	; 3
 6ca:	0f d0       	rcall	.+30     	; 0x6ea <__ultoa_invert+0x86>
 6cc:	c9 f7       	brne	.-14     	; 0x6c0 <__ultoa_invert+0x5c>
 6ce:	f6 cf       	rjmp	.-20     	; 0x6bc <__ultoa_invert+0x58>
 6d0:	46 2f       	mov	r20, r22
 6d2:	4f 70       	andi	r20, 0x0F	; 15
 6d4:	40 5d       	subi	r20, 0xD0	; 208
 6d6:	4a 33       	cpi	r20, 0x3A	; 58
 6d8:	18 f0       	brcs	.+6      	; 0x6e0 <__ultoa_invert+0x7c>
 6da:	49 5d       	subi	r20, 0xD9	; 217
 6dc:	31 fd       	sbrc	r19, 1
 6de:	40 52       	subi	r20, 0x20	; 32
 6e0:	41 93       	st	Z+, r20
 6e2:	02 d0       	rcall	.+4      	; 0x6e8 <__ultoa_invert+0x84>
 6e4:	a9 f7       	brne	.-22     	; 0x6d0 <__ultoa_invert+0x6c>
 6e6:	ea cf       	rjmp	.-44     	; 0x6bc <__ultoa_invert+0x58>
 6e8:	b4 e0       	ldi	r27, 0x04	; 4
 6ea:	a6 95       	lsr	r26
 6ec:	97 95       	ror	r25
 6ee:	87 95       	ror	r24
 6f0:	77 95       	ror	r23
 6f2:	67 95       	ror	r22
 6f4:	ba 95       	dec	r27
 6f6:	c9 f7       	brne	.-14     	; 0x6ea <__ultoa_invert+0x86>
 6f8:	00 97       	sbiw	r24, 0x00	; 0
 6fa:	61 05       	cpc	r22, r1
 6fc:	71 05       	cpc	r23, r1
 6fe:	08 95       	ret
 700:	9b 01       	movw	r18, r22
 702:	ac 01       	movw	r20, r24
 704:	0a 2e       	mov	r0, r26
 706:	06 94       	lsr	r0
 708:	57 95       	ror	r21
 70a:	47 95       	ror	r20
 70c:	37 95       	ror	r19
 70e:	27 95       	ror	r18
 710:	ba 95       	dec	r27
 712:	c9 f7       	brne	.-14     	; 0x706 <__ultoa_invert+0xa2>
 714:	62 0f       	add	r22, r18
 716:	73 1f       	adc	r23, r19
 718:	84 1f       	adc	r24, r20
 71a:	95 1f       	adc	r25, r21
 71c:	a0 1d       	adc	r26, r0
 71e:	08 95       	ret

00000720 <__prologue_saves__>:
 720:	2f 92       	push	r2
 722:	3f 92       	push	r3
 724:	4f 92       	push	r4
 726:	5f 92       	push	r5
 728:	6f 92       	push	r6
 72a:	7f 92       	push	r7
 72c:	8f 92       	push	r8
 72e:	9f 92       	push	r9
 730:	af 92       	push	r10
 732:	bf 92       	push	r11
 734:	cf 92       	push	r12
 736:	df 92       	push	r13
 738:	ef 92       	push	r14
 73a:	ff 92       	push	r15
 73c:	0f 93       	push	r16
 73e:	1f 93       	push	r17
 740:	cf 93       	push	r28
 742:	df 93       	push	r29
 744:	cd b7       	in	r28, 0x3d	; 61
 746:	de b7       	in	r29, 0x3e	; 62
 748:	ca 1b       	sub	r28, r26
 74a:	db 0b       	sbc	r29, r27
 74c:	0f b6       	in	r0, 0x3f	; 63
 74e:	f8 94       	cli
 750:	de bf       	out	0x3e, r29	; 62
 752:	0f be       	out	0x3f, r0	; 63
 754:	cd bf       	out	0x3d, r28	; 61
 756:	09 94       	ijmp

00000758 <__epilogue_restores__>:
 758:	2a 88       	ldd	r2, Y+18	; 0x12
 75a:	39 88       	ldd	r3, Y+17	; 0x11
 75c:	48 88       	ldd	r4, Y+16	; 0x10
 75e:	5f 84       	ldd	r5, Y+15	; 0x0f
 760:	6e 84       	ldd	r6, Y+14	; 0x0e
 762:	7d 84       	ldd	r7, Y+13	; 0x0d
 764:	8c 84       	ldd	r8, Y+12	; 0x0c
 766:	9b 84       	ldd	r9, Y+11	; 0x0b
 768:	aa 84       	ldd	r10, Y+10	; 0x0a
 76a:	b9 84       	ldd	r11, Y+9	; 0x09
 76c:	c8 84       	ldd	r12, Y+8	; 0x08
 76e:	df 80       	ldd	r13, Y+7	; 0x07
 770:	ee 80       	ldd	r14, Y+6	; 0x06
 772:	fd 80       	ldd	r15, Y+5	; 0x05
 774:	0c 81       	ldd	r16, Y+4	; 0x04
 776:	1b 81       	ldd	r17, Y+3	; 0x03
 778:	aa 81       	ldd	r26, Y+2	; 0x02
 77a:	b9 81       	ldd	r27, Y+1	; 0x01
 77c:	ce 0f       	add	r28, r30
 77e:	d1 1d       	adc	r29, r1
 780:	0f b6       	in	r0, 0x3f	; 63
 782:	f8 94       	cli
 784:	de bf       	out	0x3e, r29	; 62
 786:	0f be       	out	0x3f, r0	; 63
 788:	cd bf       	out	0x3d, r28	; 61
 78a:	ed 01       	movw	r28, r26
 78c:	08 95       	ret

0000078e <_exit>:
 78e:	f8 94       	cli

00000790 <__stop_program>:
 790:	ff cf       	rjmp	.-2      	; 0x790 <__stop_program>
